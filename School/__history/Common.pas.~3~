unit Common;

interface

uses DMUN,Data.DB,Data.Win.ADODB,System.SysUtils;
Type
  TValidationType = (tvdtIdInUseForRelation = 1 ,tvdtIdNotExist = 2,tvdtIdIsExist = 3 );

Function IsValid(TableName,FieldName : String;FirstFieldValue,SecondFieldValue : Integer; ValidType : TValidationType): Boolean;

implementation

Function IsValid(TableName : String;FieldName : String; FirstFieldValue,SecondFieldValue : Integer; ValidType : TValidationType): Boolean;
begin
  Result := False;
  With TADOQuery.Create(Nil) DO
  begin
    Connection := DataModule1.ADOConnection1;
    SQL.Clear;
    if ValidType = tvdtIdInUseForRelation then
    begin
      SQL.Add(Format('Select * From %s Where %s = %s',[TableName,FieldName,IntTostr(FirstFieldValue)]));
      Open;
      if Not IsEmpty then
        Result := True;
    end
    else
    if ValidType = tvdtIdNotExist then
    begin
      SQL.Add(Format('Select * From %s Where %s = %s',[TableName,FieldName,IntTostr(FirstFieldValue)]));
      Open;
      if  IsEmpty then
        Result := True;
    end
    else
    if ValidType = tvdtIdIsExist then
    begin
      SQL.Add(Format('Select * From %s Where %s = %s and %s <> %s',[TableName,FieldName,IntTostr(FirstFieldValue),FieldName,IntTostr(SecondFieldValue)]));
      Open;
      if  Not IsEmpty then
        Result := True;
    end;
  end;

end;


end.
